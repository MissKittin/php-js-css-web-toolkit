<?php
	/*
	 * clock.js library test
	 *
	 * Note:
	 *  looks for a library at ../lib
	 *  looks for a library at ..
	 *
	 * Warning:
	 *  gd extension is recommended
	 */

	function generate_clock_assets()
	{
		if(!extension_loaded('gd'))
		{
			echo 'Error: gd extension is not loaded';
			return false;
		}

		@mkdir(__DIR__.'/tmp/clock');

		echo 'clockDigitalImage<br>';
			ob_flush();
			for($i=0; $i<11; ++$i)
			{
				if($i === 10)
					$i=':';

				$image=imagecreate(16, 24);
				imagecolorallocate($image, 0,0,0);
				$image_fg=imagecolorallocate($image, 255,255,255);
				imagestring($image, 5, 0, 0, $i, $image_fg);

				if($i === ':')
					$i='separator';

				imagepng($image, __DIR__.'/tmp/clock/'.$i.'.png');
				imagedestroy($image);

				if($i === 'separator')
					$i=10;
			}

		echo 'clockDigitalImageSprite<br>';
			ob_flush();
			$image=imagecreate(176, 24);
			imagecolorallocate($image, 0,0,0);
			$image_fg=imagecolorallocate($image, 255,255,255);
			for($i=0; $i<11; ++$i)
			{
				$char=$i;

				if($i === 10)
					$char=':';

				imagestring($image, 5, 16*$i, 0, $char, $image_fg);
			}
			imagepng($image, __DIR__.'/tmp/clock/clock.png');
			imagedestroy($image);

		echo 'clockAnalogImage<br>';
			ob_flush();
			$image=imagecreatetruecolor(500, 500);
				imagealphablending($image, false);
				imagefill($image, 0, 0, imagecolorallocatealpha($image, 0,0,0, 127));
				imagesavealpha($image, true);
				imagearc($image, 250,250, 500,500, 0,360, imagecolorallocate($image, 0,0,0));
				imagepng($image, __DIR__.'/tmp/clock/clock-face.png');
				imagedestroy($image);
			foreach([
				'hour-hand'=>[
					[248, 160, 248, 250],
					[249, 160, 249, 250],
					[250, 160, 250, 250],
					[251, 160, 251, 250],
					[252, 160, 252, 250]
				],
				'minute-hand'=>[
					[249, 130, 249, 250],
					[250, 130, 250, 250],
					[251, 130, 251, 250]
				],
				'second-hand'=>[[250, 0, 250, 250]]
			] as $file_name=>$lines){
				$image=imagecreatetruecolor(500, 500);
				imagealphablending($image, false);
				imagefill($image, 0, 0, imagecolorallocatealpha($image, 0,0,0, 127));
				imagesavealpha($image, true);
				$image_fg=imagecolorallocate($image, 0,0,0);

				foreach($lines as $line)
					imageline($image, $line[0], $line[1], $line[2], $line[3], $image_fg);

				imagepng($image, __DIR__.'/tmp/clock/'.$file_name.'.png');
				imagedestroy($image);
			}
			$image=imagecreatetruecolor(500, 500);
				imagealphablending($image, false);
				imagefill($image, 0, 0, imagecolorallocatealpha($image, 0,0,0, 127));
				imagesavealpha($image, true);
				imagefilledarc($image, 250,250, 40,40, 0,360, imagecolorallocate($image, 0,0,0), IMG_ARC_PIE);
				imagepng($image, __DIR__.'/tmp/clock/top-image.png');
				imagedestroy($image);

		echo 'clockAnalogImageSprite<br>';
			ob_flush();
			$image=imagecreatetruecolor(2500, 500);
				imagealphablending($image, false);
				imagefill($image, 0, 0, imagecolorallocatealpha($image, 0,0,0, 127));
				imagesavealpha($image, true);
				imagearc($image, 250,250, 500,500, 0,360, imagecolorallocate($image, 0,0,0));
			$i=1;
			foreach([
				'hour-hand'=>[
					[248, 160, 248, 250],
					[249, 160, 249, 250],
					[250, 160, 250, 250],
					[251, 160, 251, 250],
					[252, 160, 252, 250]
				],
				'minute-hand'=>[
					[249, 130, 249, 250],
					[250, 130, 250, 250],
					[251, 130, 251, 250]
				],
				'second-hand'=>[[250, 0, 250, 250]]
			] as $file_name=>$lines){
				$offset=$i*500;

				$image_fg=imagecolorallocate($image, 0,0,0);

				foreach($lines as $line)
					imageline($image, $line[0]+$offset, $line[1], $line[2]+$offset, $line[3], $image_fg);

				++$i;
			}
			$offset=$i*500;
				imagefilledarc($image, 250+$offset,250, 40,40, 0,360, imagecolorallocate($image, 0,0,0), IMG_ARC_PIE);
			imagepng($image, __DIR__.'/tmp/clock/clockspriteanalog.png');
			imagedestroy($image);

		return true;
	}

	if(
		(!is_file(__DIR__.'/../lib/'.basename(__FILE__, '.phtml'))) &&
		(!is_file(__DIR__.'/../'.basename(__FILE__, '.phtml')))
	){
		echo __DIR__.'/../lib/'.basename(__FILE__, '.phtml').' is not a file'.PHP_EOL;
		echo __DIR__.'/../'.basename(__FILE__, '.phtml').' is not a file'.PHP_EOL;
		exit();
	}
?>
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<meta http-equiv="Content-Security-Policy" content="default-src 'none'; style-src 'self' 'nonce-stylemain'; script-src 'self' 'nonce-scriptmain'; img-src 'self'">
		<style nonce="stylemain">
			#select_clock {
				font-size: 30pt;
			}
			#clock_div_id_analog {
				width: 500px;
				height: 500px;
			}
		</style>
		<?php if(isset($_GET['clock'])) { ?><script nonce="scriptmain">
			<?php
				if(is_file(__DIR__.'/../lib/'.basename(__FILE__, '.phtml')))
					require __DIR__.'/../lib/'.basename(__FILE__, '.phtml');
				else if(is_file(__DIR__.'/../'.basename(__FILE__, '.phtml')))
					require __DIR__.'/../'.basename(__FILE__, '.phtml');
			?>

			document.addEventListener('DOMContentLoaded', function(){<?php
				switch($_GET['clock'])
				{
					case 'clockDigital': ?>
						clockDigital(document.getElementById('clock_div_id'), ':');
					<?php break;
					case 'clockDigitalImage': ?>
						clockDigitalImage(
							document.getElementById('clock_div_id'),
							[
								'/tmp/clock/0.png',
								'/tmp/clock/1.png',
								'/tmp/clock/2.png',
								'/tmp/clock/3.png',
								'/tmp/clock/4.png',
								'/tmp/clock/5.png',
								'/tmp/clock/6.png',
								'/tmp/clock/7.png',
								'/tmp/clock/8.png',
								'/tmp/clock/9.png'
							],
							'/tmp/clock/separator.png'
						);
					<?php break;
					case 'clockDigitalImageSprite': ?>
						clockDigitalImageSprite(
							document.getElementById('clock_div_id'),
							'/tmp/clock/clock.png',
							'24px',
							'16px',
							'16px',
							[
								'0px',
								'16px',
								'32px',
								'48px',
								'64px',
								'80px',
								'96px',
								'112px',
								'128px',
								'144px'
							],
							'160px'
						);
					<?php break;
					case 'clockAnalogCSS': ?>
						clockAnalogCSS(document.getElementById('clock_div_id_analog'), '#000000');
					<?php break;
					case 'clockAnalogImage': ?>
						clockAnalogImage(
							document.getElementById('clock_div_id_analog'),
							[
								'/tmp/clock/clock-face.png',
								'/tmp/clock/hour-hand.png',
								'/tmp/clock/minute-hand.png',
								'/tmp/clock/second-hand.png',
								'/tmp/clock/top-image.png'
							]
						);
					<?php break;
					case 'clockAnalogImageSprite': ?>
						clockAnalogImageSprite(
							document.getElementById('clock_div_id_analog'),
							'/tmp/clock/clockspriteanalog.png',
							['500px', '1000px', '1500px', '2000px']
						);
					<?php break;
				}
			?>}, false);
		</script><?php } ?>
	</head>
	<body>
		<?php
			if(isset($_GET['clock']))
				switch($_GET['clock'])
				{
					case 'clockDigital': ?>
						<h1><div id="clock_div_id"></div></h1>
					<?php break;
					case 'clockDigitalImage':
					case 'clockDigitalImageSprite': ?>
						<div id="clock_div_id"></div>
					<?php break;
					case 'clockAnalogCSS':
					case 'clockAnalogImage':
					case 'clockAnalogImageSprite': ?>
						<div id="clock_div_id_analog"></div>
					<?php break;
					case 'generateImages':
						if(generate_clock_assets())
							?><h1>OK</h1><?php
				}
			else
			{ ?>
				<div id="select_clock">
					<a href="?clock=clockDigital">clockDigital</a><br>
					<a href="?clock=clockDigitalImage">clockDigitalImage</a><br>
					<a href="?clock=clockDigitalImageSprite">clockDigitalImageSprite</a><br>
					<a href="?clock=clockAnalogCSS">clockAnalogCSS</a><br>
					<a href="?clock=clockAnalogImage">clockAnalogImage</a><br>
					<a href="?clock=clockAnalogImageSprite">clockAnalogImageSprite</a><br>
					<br>
					<a href="?clock=generateImages">Generate images</a>
				</div>
			<?php }
		?>
	</body>
</html>